version: 2.0

jobs:

  refresh_geckoboard:
    docker:
      - image: circleci/python:3.6.5
    working_directory: ~/directory-periodical-tests
    steps:
      - checkout
      - run:
          name: Refresh Geckoboard
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -q -r requirements_geckoboard_updater.txt
            python geckoboard_updater/geckoboard_updater.py

  check_for_dead_links_on_dev:
    docker:
      - image: circleci/python:3.6.5
    working_directory: ~/directory-periodical-tests
    steps:
      - checkout
      - run:
          name: Check for dead links
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -q -r requirements_dead_links.txt
            TEST_ENV=DEV make dead_links_check
      - store_test_results:
          path: ./reports
      - store_artifacts:
          path: ./reports

  check_for_dead_links_on_stage:
    docker:
      - image: circleci/python:3.6.5
    working_directory: ~/directory-periodical-tests
    steps:
      - checkout
      - run:
          name: Check for dead links
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -q -r requirements_dead_links.txt
            TEST_ENV=STAGE make dead_links_check
      - store_test_results:
          path: ./reports
      - store_artifacts:
          path: ./reports

  check_for_dead_links_on_prod:
    docker:
      - image: circleci/python:3.6.5
    working_directory: ~/directory-periodical-tests
    steps:
      - checkout
      - run:
          name: Check for dead links
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -q -r requirements_dead_links.txt
            TEST_ENV=PROD make dead_links_check
      - store_test_results:
          path: ./reports
      - store_artifacts:
          path: ./reports

  accessibility_tests_export_readiness_dev:
    docker:
      - image: circleci/node:10.5.0-stretch-browsers
    working_directory: ~/directory-periodical-tests
    environment:
      BASH_ENV: ~/.bashrc
      SHELL: /bin/bash
      PARALLEL_SHELL: bash
    steps:
      - checkout
      - run:
          name: Install GNU Parallel
          command: |
            echo "Downloading and installing Gnu parallel..."
            wget ftp://ftp.gnu.org/gnu/parallel/parallel-20180622.tar.bz2
            bzip2 -dc parallel-20180622.tar.bz2 | tar xf -
            cd parallel-20180622
            ./configure && make && sudo make install
            echo "Gnu parallel was successfully installed."
      - run:
          name: Update npm
          command: |
            sudo npm install -g npm
      - run:
          name: Install OS dependencies
          command: |
            sudo apt-get -qq install --yes xmlstarlet python3-pip
      - run:
          name: Install Python dependencies
          command: |
            sudo pip3 --quiet install beautifulsoup4
      - run:
          name: Install NodeJS dependencies
          command: |
            sudo npm install -g pa11y pa11y-reporter-html --unsafe-perm=true --allow-root
      - run:
          name: Fix Puppeteer file permissions
          command: |
            cd /usr/local/lib/node_modules/pa11y/node_modules/puppeteer/.local-chromium
            find . -type d | xargs -L1 -Ixx sudo chmod 755 xx
            find . -type f -perm /u+x | xargs -L1 -Ixx sudo chmod 755 xx
            find . -type f -not -perm /u+x | xargs -L1 -Ixx sudo chmod 644 xx
      - run:
          name: Get XML sitemap
          command: |
            wget -q https://dev.exportreadiness.directory.uktrade.io/sitemap.xml
      - run:
          name: Convert XML sitemap to a TXT sitemap
          command: |
            xmlstarlet sel -N x="http://www.sitemaps.org/schemas/sitemap/0.9" -t -v "/x:urlset/x:url/x:loc" sitemap.xml > sitemap.txt
      - run:
          name: Remove non-html URLS from TXT sitemap
          command: |
            sed -i '/sitemap.xml\|robots.txt\|\.pdf/d' sitemap.txt
      - run:
          name: Scan URLs from TXT sitemap with Pa11y
          command: |
            echo "Pa11y will scan following URLs:"
            cat sitemap.txt
            echo -e "\n\nStarting pa11y in parallel:\n"
            parallel --jobs 2 --verbose 'pa11y --reporter=html {} > ./reports/{= s:[/\:\?\&\=]:-:g; =}.html' < sitemap.txt || echo "Pa11y found some issues."
      - run:
          name: Generate an index file for Pa11y html reports
          command: |
            python3 pa11y/generate-report-index.py
      - store_artifacts:
          path: ./reports

  check_cms_pages_on_production:
    docker:
      - image: circleci/python:3.6.5
    working_directory: ~/directory-periodical-tests
    steps:
      - checkout
      - run:
          name: Check CMS pages
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -q -r requirements_cms_pages.txt
            make cms_pages_check
      - store_test_results:
          path: ./reports
      - store_artifacts:
          path: ./reports

workflows:
  version: 2

  refresh_geckoboard_periodically:
    triggers:
    - schedule:
        cron: "0,15,30,45 8-17 * * 1-5"
        filters:
          branches:
            only: master
    jobs:
      - refresh_geckoboard

  dev_check_for_dead_links:
    triggers:
    - schedule:
        cron: "0,30 8-17 * * 1-5"
        filters:
          branches:
            only: master
    jobs:
      - check_for_dead_links_on_dev

  stage_check_for_dead_links:
    triggers:
    - schedule:
        cron: "10,40 8-17 * * 1-5"
        filters:
          branches:
            only: master
    jobs:
      - check_for_dead_links_on_stage

  prod_check_for_dead_links:
    triggers:
    - schedule:
        cron: "20,50 8-17 * * 1-5"
        filters:
          branches:
            only: master
    jobs:
      - check_for_dead_links_on_prod

  dev_ex_read_accessibility_tests:
    jobs:
      - accessibility_tests_export_readiness_dev

  prod_check_cms_pages:
    triggers:
    - schedule:
        cron: "5,35 8-17 * * 1-5"
        filters:
          branches:
            only: master
    jobs:
      - check_cms_pages_on_production
